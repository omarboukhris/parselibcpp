
constructor ->
    !construct. lpar. !args rpar. semic. |
    !destruct. lpar. rpar. semic.

// attribute syntax definition

attribute -> 
	!visibility. s:type att_name=identifier. semic. |
	!visibility. !py. s:type att_name=identifier. semic.

// method syntax definition

method -> 
	!visibility. s:type met_name=identifier. lpar. !args rpar. semic. |
	!visibility. !py. s:type met_name=identifier. lpar. !args rpar. semic. |
	!visibility. s:type met_name=identifier. lpar. !args rpar. !multilinecommands. |
	!visibility. !py. s:type met_name=identifier. lpar. !args rpar. !multilinecommands.

args ->
	s:type args_name=identifier. |
	s:type args_name=identifier. comma. |
[]

// type syntax definition

type ->
	template_type |
	base_type. refptr |
	base_type.

refptr -> 
	ref. | ptr. |
[]

template_type ->
	identifier. lt. type gt. |
	identifier. lt. template_type gt. |
	identifier. lt. type_list gt. |
	identifier. lt. base_type. gt. 

type_list ->
	type comma. type_list |
	type comma. type |
	type 


